plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.rezero'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

configurations.all {
	exclude group: 'commons-logging', module: 'commons-logging'
}

repositories {
	mavenCentral()
	google() // Firebase Admin SDK 를 위해 추가
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation 'commons-io:commons-io:2.15.1'


	// DB connection
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// DevTools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// JUnit test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// JASYPT
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

	// aws s3
	implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'
	implementation 'io.awspring.cloud:spring-cloud-starter-aws-secrets-manager-config:2.4.4'

	// SCP
	implementation 'com.jcraft:jsch:0.1.55'

	// Firebase Admin SDK
	implementation 'com.google.firebase:firebase-admin:9.2.0'
	implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'
	implementation 'com.squareup.okio:okio:2.10.0'


	// 예외 처리를 위한 validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// BlockChain
	implementation 'org.web3j:core:4.9.6'

	// Selenium
	implementation 'org.seleniumhq.selenium:selenium-java:4.6.0'

	// Jsoup
	implementation 'org.jsoup:jsoup:1.15.3'
}

//test {
//	useJUnitPlatform()
//}